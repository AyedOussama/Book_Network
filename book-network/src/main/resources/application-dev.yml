spring:

  datasource:
    url: jdbc:mysql://localhost:3306/book-network?autoReconnect=true&useSSL=false&createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: create # ou "create" si vous voulez que Hibernate crée automatiquement les tables
    show-sql: false # pour afficher les requêtes SQL dans la console
    properties:
      hibernate:
        format_sql: true # pour formater les requêtes SQL
    database: mysql
#  datasource:
#    url: jdbc:postgresql://localhost:5432/book_social_network
#    username: root
#    password: root
#    driver-class-name: org.postgresql.Driver
#  jpa:
#       database-platform: org.hibernate.dialect.PostgreSQLDialect
#       database: postgresql
#       hibernate:
#            ddl-auto: create # ou "create" si vous voulez que Hibernate crée automatiquement les tables
#       show-sql: false # pour afficher les requêtes SQL dans la console
#       properties:
#            hibernate:
#            format_sql: true # pour formater les requêtes SQL

  mail:
    host: localhost
    port: 1025
    username: 'oussama'
    password: 'oussama'
    properties:
      mail:
        smtp:
          trust: '*'
        auth: true
        starttls:
          enable: true
        connectiontimeout: 5000 # in milliseconds 5s
        timeout: 3000 # in milliseconds 3s
        writetimeout: 5000

application:
  security:
    jwt:
      secret-key: a5a986079ec84d25cd2bc463af64cb056422e7f67bb34fd0d65fd49ea5088bea
      expiration: 864000000 # 10 days //
  mailing:
    frontend:
        activation-url: http://localhost:4200/activate-account/ #      it depends on your frontend url (Angular 4200 port, React 3000 port, etc.)
#      it depends on your frontend url (Angular 4200 port, React 3000 port, etc.)
  file:
    uploads:
      photos-output-path: ./uploads
server:
  port: 8088